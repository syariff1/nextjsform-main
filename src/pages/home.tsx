import { useState } from "react";
import { useRouter } from "next/router";
import Forms from "./forms";
import type Form from "~/types/Form";
import { api } from "~/utils/api";
import Link from "next/link";
import Head from "next/head";
import Header from "../components/Header";

export default function home() {
    // const router = useRouter(); // Importing useRouter hook for navigation
    // //const notesCreateMutation = api.note.notesCreate.useMutation();
    // const [title, setTitle] = useState('');
    // const [description, setDescription] = useState('');

    // const handleCreateNote = async () => {
    //     /*try {
    //         await notesCreateMutation.mutateAsync({ title, description }).then((result) => {
    //             router.push('/'); // Navigate back to index page
    //         });
    //     } catch (err) {
    //         console.error("Error creating note:", err);
    //     }*/
    // };

    // return (
    //     <div className="p-10 m-10">
    //         <h1 className="p-6">Create a Note</h1>
    //         <form className="flex items-center flex-col space-y-4">
    //             <input
    //                 type="text"
    //                 value={title}
    //                 className="block w-full rounded-md border-0 p-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 sm:text-sm sm:leading-6"
    //                 placeholder="Title"
    //                 onChange={(e) => setTitle(e.target.value)}
    //             />
    //             <textarea
    //                 placeholder="Description"
    //                 value={description}
    //                 className="block w-full rounded-md border-0 p-2 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 sm:text-sm sm:leading-6"
    //                 onChange={(e) => setDescription(e.target.value)}
    //             ></textarea>
    //             <button type="button"
    //                 onClick={()=>{router.push('/createform')}}
    //                 className="w-full max-w-[50px] items-center rounded-md bg-gray-900 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
    //             >+</button>
    //         </form>
    //         <button type="button"
    //         onClick={()=>{router.push('/')}}
    //         className="w-full max-w-[100px] items-center rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
    //         >back to home</button>
    //     </div>
    // );
   
    const router = useRouter();
    const { data: forms } = api.form.formslist.useQuery() as { data: Form[] };
    const handleCreateFormPage = () => {
      router.push('/createform');
    };
  
    return (
      <>
       <Head>
        <title>Home | Create a form</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main>
      <div className="flex min-h-screen flex-col items-center justify-start">
          <div className="w-full max-w-3xl border-b border-gray-200 bg-white px-4 py-5 sm:px-6">
            <div className="-ml-4 -mt-4 flex flex-wrap items-center justify-between sm:flex-nowrap">
              <div className="ml-4 mt-4 flex w-full flex-col">
                <h3 className="text-base font-semibold leading-6 text-gray-900">
                  Forms
                </h3>
                <button
                  onClick={handleCreateFormPage}
                  className="p-4 mb-4 rounded-full bg-blue-500 text-white fixed bottom-4 right-4 shadow-lg">
                  +
                </button>
              </div>
            </div>
          </div>
  
          <Forms forms={forms} />
        </div>
      </main>
       
      </>
    );
}
